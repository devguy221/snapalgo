{"version":3,"file":"calculatePriorityFeeRange.js","sourceRoot":"","sources":["../../../src/gas/fetchGasEstimatesViaEthFeeHistory/calculatePriorityFeeRange.ts"],"names":[],"mappings":";;AAAA,qDAAqC;AACrC,2CAAqC;AACrC,+CAAuC;AAIvC;;;;;;;;GAQG;AACH,SAAwB,yBAAyB,CAC/C,MAA0C;IAE1C,MAAM,qBAAqB,GAAG,MAAM;SACjC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;SAClD,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,oBAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SACnD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5B,MAAM,sBAAsB,GAAG,MAAM;SAClC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;SAClD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5B,OAAO;QACL,oBAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,gBAAI,CAAC;QACvC,oBAAO,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,gBAAI,CAAC;KACzE,CAAC;AACJ,CAAC;AAhBD,4CAgBC","sourcesContent":["import { BN } from 'ethereumjs-util';\nimport { fromWei } from 'ethjs-unit';\nimport { GWEI } from '../../constants';\nimport { ExistingFeeHistoryBlock } from '../fetchBlockFeeHistory';\nimport { FeeRange } from './types';\n\n/**\n * Calculates reasonable minimum and maximum values for priority fees over the last 200 blocks.\n * Although some priority fees may be 0, these are discarded as they are not useful for suggestion\n * purposes.\n *\n * @param blocks - A set of blocks populated with data for priority fee percentiles 10 and 95,\n * obtained via {@link BlockFeeHistoryDatasetFetcher}.\n * @returns The range.\n */\nexport default function calculatePriorityFeeRange(\n  blocks: ExistingFeeHistoryBlock<10 | 95>[],\n): FeeRange {\n  const sortedLowPriorityFees = blocks\n    .map((block) => block.priorityFeesByPercentile[10])\n    .filter((priorityFee) => !priorityFee.eq(new BN(0)))\n    .sort((a, b) => a.cmp(b));\n\n  const sortedHighPriorityFees = blocks\n    .map((block) => block.priorityFeesByPercentile[95])\n    .sort((a, b) => a.cmp(b));\n\n  return [\n    fromWei(sortedLowPriorityFees[0], GWEI),\n    fromWei(sortedHighPriorityFees[sortedHighPriorityFees.length - 1], GWEI),\n  ];\n}\n"]}