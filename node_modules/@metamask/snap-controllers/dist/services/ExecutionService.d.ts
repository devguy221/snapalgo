import { SnapExecutionData } from '@metamask/snap-types';
import type { JsonRpcRequest } from '@metamask/utils';
import { SnapRpcHook } from './AbstractExecutionService';
export interface SnapMetadata {
    hostname: string;
}
export declare type TerminateSnap = (snapId: string) => Promise<void>;
export declare type Command = (snapId: string, message: JsonRpcRequest<unknown>) => Promise<unknown>;
export declare type TerminateAll = () => Promise<void>;
export declare type CreateSnapEnvironment = (metadata: SnapMetadata) => Promise<string>;
export declare type ExecuteSnap = (snapData: SnapExecutionData) => Promise<unknown>;
export declare type GetRpcMessageHandler = (snapId: string) => Promise<SnapRpcHook | undefined>;
export interface ExecutionService {
    terminateSnap: TerminateSnap;
    terminateAllSnaps: TerminateAll;
    executeSnap: ExecuteSnap;
    getRpcMessageHandler: GetRpcMessageHandler;
}
