"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const worker_threads_1 = require("worker_threads");
const fs_1 = require("fs");
const mock_1 = require("./mock");
// eslint-disable-next-line import/no-unassigned-import
require("ses/lockdown");
lockdown({
    consoleTaming: 'unsafe',
    errorTaming: 'unsafe',
    mathTaming: 'unsafe',
    dateTaming: 'unsafe',
    overrideTaming: 'severe',
});
if (worker_threads_1.parentPort !== null) {
    worker_threads_1.parentPort.on('message', (message) => {
        const { snapFilePath } = message;
        new Compartment(getMockEndowments()).evaluate((0, fs_1.readFileSync)(snapFilePath, 'utf8'));
        setTimeout(() => process.exit(0), 1000); // Hack to ensure worker exits
    });
}
function getMockEndowments() {
    const endowments = (0, mock_1.generateMockEndowments)();
    return Object.assign(Object.assign({}, endowments), { window: endowments, self: endowments });
}
//# sourceMappingURL=eval-worker.js.map