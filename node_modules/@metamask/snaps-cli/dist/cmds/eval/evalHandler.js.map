{"version":3,"file":"evalHandler.js","sourceRoot":"","sources":["../../../src/cmds/eval/evalHandler.ts"],"names":[],"mappings":";;;AACA,uCAAyD;AACzD,6CAA0C;AAEnC,KAAK,UAAU,QAAQ,CAAC,IAAe;IAC5C,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;IACpC,MAAM,wBAAgB,CAAC,UAAoB,CAAC,CAAC;IAC7C,IAAI;QACF,MAAM,uBAAU,CAAC,UAAoB,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,4BAA4B,UAAU,WAAW,CAAC,CAAC;KAChE;IAAC,OAAO,GAAG,EAAE;QACZ,gBAAQ,CAAC,0BAA0B,GAAG,CAAC,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC;QACvD,MAAM,GAAG,CAAC;KACX;AACH,CAAC;AAVD,4BAUC","sourcesContent":["import { YargsArgs } from '../../types/yargs';\nimport { logError, validateFilePath } from '../../utils';\nimport { workerEval } from './workerEval';\n\nexport async function snapEval(argv: YargsArgs): Promise<void> {\n  const { bundle: bundlePath } = argv;\n  await validateFilePath(bundlePath as string);\n  try {\n    await workerEval(bundlePath as string);\n    console.log(`Eval Success: evaluated '${bundlePath}' in SES!`);\n  } catch (err) {\n    logError(`Snap evaluation error: ${err.message}`, err);\n    throw err;\n  }\n}\n"]}