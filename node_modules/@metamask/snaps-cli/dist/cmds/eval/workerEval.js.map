{"version":3,"file":"workerEval.js","sourceRoot":"","sources":["../../../src/cmds/eval/workerEval.ts"],"names":[],"mappings":";;;;;;AAAA,mDAAwC;AACxC,gDAA6B;AAE7B,SAAgB,UAAU,CAAC,UAAkB;IAC3C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC7B,IAAI,uBAAM,CAAC,iBAAiB,EAAE,CAAC;aAC5B,EAAE,CAAC,MAAM,EAAE,CAAC,QAAgB,EAAE,EAAE;YAC/B,IAAI,QAAQ,KAAK,CAAC,EAAE;gBAClB,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,mCAAmC,QAAQ,EAAE,CAAC,CAAC;aAChE;QACH,CAAC,CAAC;aACD,WAAW,CAAC;YACX,YAAY,EAAE,UAAU;SACzB,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,gCAcC;AAED;;GAEG;AACH,SAAS,iBAAiB;IACxB,OAAO,cAAS,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AACrD,CAAC","sourcesContent":["import { Worker } from 'worker_threads';\nimport pathUtils from 'path';\n\nexport function workerEval(bundlePath: string): Promise<null> {\n  return new Promise((resolve) => {\n    new Worker(getEvalWorkerPath())\n      .on('exit', (exitCode: number) => {\n        if (exitCode === 0) {\n          resolve(null);\n        } else {\n          throw new Error(`Worker exited abnormally! Code: ${exitCode}`);\n        }\n      })\n      .postMessage({\n        snapFilePath: bundlePath,\n      });\n  });\n}\n\n/**\n * @returns The path to the eval worker file.\n */\nfunction getEvalWorkerPath(): string {\n  return pathUtils.join(__dirname, 'eval-worker.js');\n}\n"]}